steps:
# run code scanner
- name: gcr.io/$PROJECT_ID/test_runner
  args: ['flake8','.','--count','--select=E9,F63,F7,F82','--show-source','--statistics']
  id: run_lint_check
# run test locally
- name: gcr.io/$PROJECT_ID/test_runner
  args: ['python','manage.py','test','--verbosity=2','--noinput']
  env: ['BETTERSTART_DB=local']
  id: run_tests
# get settings file
- name: gcr.io/cloud-builders/gsutil
  args: ['cp', '${_BETTERSTART_ENV_SCRIPT}', 'setenv']
  id: get_settings_file
# decrypt environment variables
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=setenv
  - --plaintext-file=setenv
  - --location=global
  - --keyring=${_BETTERSTART_KEYRING}
  - --key=${_BETTERSTART_KEY}
  id: decrypt_settings_file
# check environment variables
- name: gcr.io/cloud-builders/test_runner
  args: ['printenv']
  id: check_variables
# prep for deployment
- name: gcr.io/$PROJECT_ID/test_runner
  entrypoint: 'bash'
  args:
   - -c
   - |
      . setenv
      python manage.py collectstatic --noinput
      python deployment/build_yaml.py
      /cloud_sql_proxy -instances $$BETTERSTART_DB_INSTANCE=tcp:3306 &
      sleep 30
      python manage.py migrate --noinput
  id: prepare_for_deployment
# deploy application to App Engine
- name: gcr.io/cloud-builders/gcloud
  args: ['app', 'deploy','--version=staging']
  id: deploy
