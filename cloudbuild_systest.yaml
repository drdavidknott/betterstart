steps:
# run test locally
- name: gcr.io/$PROJECT_ID/test_runner
  entrypoint: 'bash'
  args: ['-c','python','manage.py','--verbosity=2','--noinput']
# decrypt environment variables
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=${_BETTERSTART_ENV_SCRIPT}
  - --plaintext-file=setenv
  - --location=global
  - --keyring=betterstart-keyring
  - --key=betterstart-key
# run test against Cloud SQL database
- name: gcr.io/$PROJECT_ID/test_runner
  entrypoint: 'bash'
  args:
   - -c
   - |
      . setenv
      /cloud_sql_proxy -instances $$BETTERSTART_DB_INSTANCE=tcp:3306 &
      python manage.py test --verbosity=2 --noinput
  timeout: 3600s
# run database migrations
- name: gcr.io/$PROJECT_ID/test_runner
  entrypoint: 'bash'
  args:
   - -c
   - |
      . setenv
      /cloud_sql_proxy -instances $$BETTERSTART_DB_INSTANCE=tcp:3306 &
      python manage.py migrate
# build yaml file for deployment
- name: gcr.io/$PROJECT_ID/test_runner
  entrypoint: 'bash'
  args: ['-c','python','build_yaml.py']
# deploy application to App Engine
- name: gcr.io/cloud-builders/gcloud
  args: ['app', 'deploy']
timeout: 3600s